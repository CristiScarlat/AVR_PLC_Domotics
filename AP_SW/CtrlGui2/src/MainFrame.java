

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Scarlat Cristian
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    //Declarare variabile globale 
  // start attributes
    String RelConfig = "";
    String SetText = "";
    String Rel0v0 = "";
    String Rel0v1 = "";
    String Rel0v2 = "";
    String Rel0v3 = "";
    String Rel1v0 = "";
    String Rel1v1 = "";
    String Rel1v2 = "";
    String Rel1v3 = "";
    String Rel2v0 = "";
    String Rel2v1 = "";
    String Rel2v2 = "";
    String Rel2v3 = "";
    String Rel3v0 = "";
    String Rel3v1 = "";
    String Rel3v2 = "";
    String Rel3v3 = "";
    String Rel4v0 = "";
    String Rel4v1 = "";
    String Rel4v2 = "";
    String Rel4v3 = "";
    String Rel5v0 = "";
    String Rel5v1 = "";
    String Rel5v2 = "";
    String Rel5v3 = "";
    String Rel6v0 = "";
    String Rel6v1 = "";
    String Rel6v2 = "";
    String Rel6v3 = "";
    String Rel7v0 = "";
    String Rel7v1 = "";
    String Rel7v2 = "";
    String Rel7v3 = "";
    String path;
    int TextOffset;
    int SldVal1;
    int SldVal2;
    int An1ONVal;
    int An1OFFVal;
    int An2ONVal;
    int An2OFFVal;
    int An3ONVal;
    int An3OFFVal;
    int An4ONVal;
    int An4OFFVal;
    //Contruirea interfetei grafice si initializarea campurilor text in TextArea
    public MainFrame() {
        initComponents();
        for(int i=0;i<8;i++){
                    TextArea.append(RelayList.getItemAt(i) + ":\n");
                    for(int j=0;j<4;j++){
                        TextArea.append(VariantList.getItemAt(j) + ":-\n");
                    }
                }
    }
  // start methods
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
 
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        RelayName = new javax.swing.JTextField();
        OkRelayName = new javax.swing.JButton();
        NewName = new javax.swing.JLabel();
        Error = new javax.swing.JOptionPane();
        FileChooser = new javax.swing.JFileChooser();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        RelayList = new javax.swing.JComboBox<>();
        PanelV1 = new javax.swing.JPanel();
        AinChk1 = new javax.swing.JCheckBox();
        AinChk2 = new javax.swing.JCheckBox();
        AinChk3 = new javax.swing.JCheckBox();
        AinChk4 = new javax.swing.JCheckBox();
        TempChk = new javax.swing.JCheckBox();
        HumChk = new javax.swing.JCheckBox();
        LightChk = new javax.swing.JCheckBox();
        ClkChk = new javax.swing.JCheckBox();
        DinChk0 = new javax.swing.JCheckBox();
        DinChk1 = new javax.swing.JCheckBox();
        DinChk2 = new javax.swing.JCheckBox();
        DinChk3 = new javax.swing.JCheckBox();
        DinChk4 = new javax.swing.JCheckBox();
        DinChk5 = new javax.swing.JCheckBox();
        DinChk6 = new javax.swing.JCheckBox();
        DinChk7 = new javax.swing.JCheckBox();
        Ain1ON = new javax.swing.JTextField();
        Ain1OFF = new javax.swing.JTextField();
        Ain2ON = new javax.swing.JTextField();
        Ain2OFF = new javax.swing.JTextField();
        Ain3ON = new javax.swing.JTextField();
        Ain3OFF = new javax.swing.JTextField();
        Ain4ON = new javax.swing.JTextField();
        Ain4OFF = new javax.swing.JTextField();
        TempON = new javax.swing.JTextField();
        TempOFF = new javax.swing.JTextField();
        HumON = new javax.swing.JTextField();
        HumOFF = new javax.swing.JTextField();
        LightON = new javax.swing.JTextField();
        LightOFF = new javax.swing.JTextField();
        HON = new javax.swing.JTextField();
        HOFF = new javax.swing.JTextField();
        MON = new javax.swing.JTextField();
        MOFF = new javax.swing.JTextField();
        Dig0Name = new javax.swing.JTextField();
        Dig1Name = new javax.swing.JTextField();
        Dig2Name = new javax.swing.JTextField();
        Dig3Name = new javax.swing.JTextField();
        Dig4Name = new javax.swing.JTextField();
        Dig5Name = new javax.swing.JTextField();
        Dig6Name = new javax.swing.JTextField();
        An1Name = new javax.swing.JTextField();
        An2Name = new javax.swing.JTextField();
        An3Name = new javax.swing.JTextField();
        An4Name = new javax.swing.JTextField();
        TempName = new javax.swing.JTextField();
        HumName = new javax.swing.JTextField();
        LightName = new javax.swing.JTextField();
        Dig7Name = new javax.swing.JTextField();
        ClkName = new javax.swing.JTextField();
        HourName = new javax.swing.JTextField();
        MinName = new javax.swing.JTextField();
        ClearBtn = new javax.swing.JButton();
        SetBtn = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        An1Adj = new javax.swing.JRadioButton();
        An2Adj = new javax.swing.JRadioButton();
        An3Adj = new javax.swing.JRadioButton();
        An4Adj = new javax.swing.JRadioButton();
        TempAdj = new javax.swing.JRadioButton();
        HumAdj = new javax.swing.JRadioButton();
        LightAdj = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        HourName1 = new javax.swing.JTextField();
        HourName2 = new javax.swing.JTextField();
        VariantList = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        IP = new javax.swing.JTextField();
        ManualBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        TxBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        MenuNew = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        MenuOpen = new javax.swing.JMenuItem();
        MenuSave = new javax.swing.JMenuItem();
        MenuSaveAs = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        MenuExit = new javax.swing.JMenuItem();
        HelpMenu = new javax.swing.JMenu();
        Help = new javax.swing.JMenuItem();
        About = new javax.swing.JMenuItem();

        jDialog1.setMinimumSize(new java.awt.Dimension(187, 161));
        jDialog1.setResizable(false);

        OkRelayName.setText("OK");
        OkRelayName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkRelayNameActionPerformed(evt);
            }
        });

        NewName.setText("Nume nou");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addComponent(NewName)
                        .addGap(0, 119, Short.MAX_VALUE))
                    .addComponent(RelayName))
                .addContainerGap())
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(OkRelayName)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NewName)
                .addGap(18, 18, 18)
                .addComponent(RelayName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(OkRelayName)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        FileChooser.setCurrentDirectory(new java.io.File("D:\\Java prjs"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Selectati dispozitiv");

        RelayList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Digital OUT 0", "Digital OUT 1", "Digital OUT 2", "Digital OUT 3", "Digital OUT 4", "Digital OUT 5", "Digital OUT 6", "Digital OUT 7" }));
        RelayList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RelayList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RelayListActionPerformed(evt);
            }
        });
        RelayList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RelayListKeyPressed(evt);
            }
        });

        PanelV1.setBorder(javax.swing.BorderFactory.createTitledBorder("Editare Eveniment"));

        Ain1ON.setBackground(new java.awt.Color(210, 210, 210));
        Ain1ON.setFocusable(false);

        Ain1OFF.setBackground(new java.awt.Color(210, 210, 210));
        Ain1OFF.setFocusable(false);

        Ain2ON.setBackground(new java.awt.Color(210, 210, 210));

        Ain2OFF.setBackground(new java.awt.Color(210, 210, 210));

        Ain3ON.setBackground(new java.awt.Color(210, 210, 210));

        Ain3OFF.setBackground(new java.awt.Color(210, 210, 210));

        Ain4ON.setBackground(new java.awt.Color(210, 210, 210));

        Ain4OFF.setBackground(new java.awt.Color(210, 210, 210));

        TempON.setBackground(new java.awt.Color(210, 210, 210));

        TempOFF.setBackground(new java.awt.Color(210, 210, 210));

        HumON.setBackground(new java.awt.Color(210, 210, 210));

        HumOFF.setBackground(new java.awt.Color(210, 210, 210));

        LightON.setBackground(new java.awt.Color(210, 210, 210));

        LightOFF.setBackground(new java.awt.Color(210, 210, 210));

        HON.setBackground(new java.awt.Color(210, 210, 210));

        HOFF.setBackground(new java.awt.Color(210, 210, 210));

        MON.setBackground(new java.awt.Color(210, 210, 210));

        MOFF.setBackground(new java.awt.Color(210, 210, 210));

        Dig0Name.setBackground(new java.awt.Color(210, 210, 210));
        Dig0Name.setText("Digital IN 0");
        Dig0Name.setFocusable(false);
        Dig0Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Dig0NameMousePressed(evt);
            }
        });
        Dig0Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Dig0NameKeyPressed(evt);
            }
        });

        Dig1Name.setBackground(new java.awt.Color(210, 210, 210));
        Dig1Name.setText("Digital IN 1");
        Dig1Name.setFocusable(false);
        Dig1Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Dig1NameMousePressed(evt);
            }
        });
        Dig1Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Dig1NameKeyPressed(evt);
            }
        });

        Dig2Name.setBackground(new java.awt.Color(210, 210, 210));
        Dig2Name.setText("Digital IN 2");
        Dig2Name.setFocusable(false);
        Dig2Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Dig2NameMousePressed(evt);
            }
        });
        Dig2Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Dig2NameKeyPressed(evt);
            }
        });

        Dig3Name.setBackground(new java.awt.Color(210, 210, 210));
        Dig3Name.setText("Digital IN 3");
        Dig3Name.setFocusable(false);
        Dig3Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Dig3NameMousePressed(evt);
            }
        });
        Dig3Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Dig3NameKeyPressed(evt);
            }
        });

        Dig4Name.setBackground(new java.awt.Color(210, 210, 210));
        Dig4Name.setText("Digital IN 4");
        Dig4Name.setFocusable(false);
        Dig4Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Dig4NameMousePressed(evt);
            }
        });
        Dig4Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Dig4NameKeyPressed(evt);
            }
        });

        Dig5Name.setBackground(new java.awt.Color(210, 210, 210));
        Dig5Name.setText("Digital IN 5");
        Dig5Name.setFocusable(false);
        Dig5Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Dig5NameMousePressed(evt);
            }
        });
        Dig5Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Dig5NameKeyPressed(evt);
            }
        });

        Dig6Name.setBackground(new java.awt.Color(210, 210, 210));
        Dig6Name.setText("Digital IN 6");
        Dig6Name.setFocusable(false);
        Dig6Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Dig6NameMousePressed(evt);
            }
        });
        Dig6Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Dig6NameKeyPressed(evt);
            }
        });

        An1Name.setBackground(new java.awt.Color(210, 210, 210));
        An1Name.setText("Analog IN 1 ");
        An1Name.setFocusable(false);
        An1Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                An1NameMousePressed(evt);
            }
        });
        An1Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                An1NameKeyPressed(evt);
            }
        });

        An2Name.setBackground(new java.awt.Color(210, 210, 210));
        An2Name.setText("Analog IN 2");
        An2Name.setFocusable(false);
        An2Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                An2NameMousePressed(evt);
            }
        });
        An2Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                An2NameKeyPressed(evt);
            }
        });

        An3Name.setBackground(new java.awt.Color(210, 210, 210));
        An3Name.setText("Analog IN 3");
        An3Name.setFocusable(false);
        An3Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                An3NameMousePressed(evt);
            }
        });
        An3Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                An3NameKeyPressed(evt);
            }
        });

        An4Name.setBackground(new java.awt.Color(210, 210, 210));
        An4Name.setText("Analog IN 4");
        An4Name.setFocusable(false);
        An4Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                An4NameMousePressed(evt);
            }
        });

        TempName.setEditable(false);
        TempName.setBackground(new java.awt.Color(210, 210, 210));
        TempName.setText("Temperatura");
        TempName.setFocusable(false);

        HumName.setEditable(false);
        HumName.setBackground(new java.awt.Color(210, 210, 210));
        HumName.setText(" Umiditate");
        HumName.setFocusable(false);

        LightName.setEditable(false);
        LightName.setBackground(new java.awt.Color(210, 210, 210));
        LightName.setText("Lumina");
        LightName.setFocusable(false);

        Dig7Name.setBackground(new java.awt.Color(210, 210, 210));
        Dig7Name.setText("Digital IN 7");
        Dig7Name.setFocusable(false);
        Dig7Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Dig7NameMousePressed(evt);
            }
        });
        Dig7Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Dig7NameKeyPressed(evt);
            }
        });

        ClkName.setEditable(false);
        ClkName.setBackground(new java.awt.Color(210, 210, 210));
        ClkName.setText("Ceas");
        ClkName.setFocusable(false);

        HourName.setEditable(false);
        HourName.setBackground(new java.awt.Color(210, 210, 210));
        HourName.setText("Ore");
        HourName.setFocusable(false);

        MinName.setEditable(false);
        MinName.setBackground(new java.awt.Color(210, 210, 210));
        MinName.setText("Minute");
        MinName.setFocusable(false);

        ClearBtn.setText("Clear");
        ClearBtn.setPreferredSize(new java.awt.Dimension(47, 23));
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });

        SetBtn.setText("OK");
        SetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetBtnActionPerformed(evt);
            }
        });

        jSlider1.setMaximum(1023);
        jSlider1.setValue(0);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jSlider2.setMaximum(1023);
        jSlider2.setValue(1023);
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });

        buttonGroup2.add(An1Adj);
        An1Adj.setSelected(true);

        buttonGroup2.add(An2Adj);

        buttonGroup2.add(An3Adj);

        buttonGroup2.add(An4Adj);

        buttonGroup2.add(TempAdj);

        buttonGroup2.add(HumAdj);

        buttonGroup2.add(LightAdj);

        jLabel8.setText("V");

        jLabel9.setText("V");

        jLabel10.setText("V");

        jLabel11.setText("V");

        jLabel12.setText("°C");

        jLabel13.setText("%");

        jLabel14.setText(" ");

        HourName1.setEditable(false);
        HourName1.setBackground(new java.awt.Color(210, 210, 210));
        HourName1.setText("ON");
        HourName1.setFocusable(false);

        HourName2.setEditable(false);
        HourName2.setBackground(new java.awt.Color(210, 210, 210));
        HourName2.setText("OFF");
        HourName2.setFocusable(false);

        javax.swing.GroupLayout PanelV1Layout = new javax.swing.GroupLayout(PanelV1);
        PanelV1.setLayout(PanelV1Layout);
        PanelV1Layout.setHorizontalGroup(
            PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelV1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DinChk0)
                    .addComponent(DinChk1)
                    .addComponent(DinChk2)
                    .addComponent(DinChk3)
                    .addComponent(DinChk4)
                    .addComponent(DinChk5)
                    .addComponent(DinChk6)
                    .addComponent(DinChk7))
                .addGap(6, 6, 6)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelV1Layout.createSequentialGroup()
                        .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Dig0Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Dig1Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Dig2Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Dig3Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Dig4Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Dig5Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Dig6Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Dig7Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AinChk1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AinChk2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AinChk3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TempChk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HumChk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LightChk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(PanelV1Layout.createSequentialGroup()
                                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AinChk4)
                                    .addComponent(ClkChk))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(PanelV1Layout.createSequentialGroup()
                        .addComponent(SetBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HourName2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HourName1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClkName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LightName)
                    .addComponent(HumName)
                    .addComponent(TempName)
                    .addComponent(An4Name)
                    .addComponent(An3Name)
                    .addComponent(An2Name)
                    .addComponent(An1Name))
                .addGap(8, 8, 8)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelV1Layout.createSequentialGroup()
                        .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LightON)
                            .addComponent(HumON)
                            .addComponent(TempON)
                            .addComponent(Ain4ON)
                            .addComponent(Ain3ON)
                            .addComponent(Ain2ON)
                            .addGroup(PanelV1Layout.createSequentialGroup()
                                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HOFF, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                    .addComponent(HON)
                                    .addComponent(HourName)
                                    .addComponent(Ain1ON, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelV1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(Ain1OFF, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                            .addGroup(PanelV1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Ain3OFF, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Ain2OFF, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Ain4OFF, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TempOFF, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HumOFF, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LightOFF, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MinName, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MON, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MOFF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(An1Adj)
                            .addComponent(An2Adj)
                            .addComponent(An3Adj)
                            .addComponent(An4Adj)
                            .addComponent(TempAdj)
                            .addComponent(HumAdj)
                            .addComponent(LightAdj)))
                    .addGroup(PanelV1Layout.createSequentialGroup()
                        .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSlider2, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        PanelV1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Ain1OFF, Ain1ON, Ain2OFF, Ain3OFF, Ain4OFF, An1Name, An2Name, An3Name, An4Name, ClearBtn, ClkName, Dig0Name, Dig1Name, Dig2Name, Dig3Name, Dig4Name, Dig5Name, Dig6Name, Dig7Name, HOFF, HON, HourName, HumName, HumOFF, LightName, LightOFF, MOFF, MON, MinName, SetBtn, TempName, TempOFF});

        PanelV1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DinChk0, DinChk1, DinChk2, DinChk3, DinChk4, DinChk5, DinChk6, DinChk7});

        PanelV1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel8, jLabel9});

        PanelV1Layout.setVerticalGroup(
            PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelV1Layout.createSequentialGroup()
                .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(DinChk0)
                    .addComponent(Dig0Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AinChk1)
                    .addComponent(An1Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ain1ON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ain1OFF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(An1Adj)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(DinChk1)
                    .addComponent(Dig1Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AinChk2)
                    .addComponent(An2Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ain2ON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ain2OFF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(An2Adj)
                    .addComponent(jLabel9))
                .addGap(19, 19, 19)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(DinChk2)
                    .addComponent(Dig2Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AinChk3)
                    .addComponent(An3Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ain3ON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ain3OFF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(An3Adj)
                    .addComponent(jLabel10))
                .addGap(13, 13, 13)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(DinChk3)
                    .addComponent(Dig3Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AinChk4)
                    .addComponent(An4Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ain4ON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ain4OFF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(An4Adj)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(DinChk4)
                    .addComponent(Dig4Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TempChk)
                    .addComponent(TempName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TempON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TempOFF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TempAdj)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(DinChk5)
                    .addComponent(Dig5Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HumChk)
                    .addComponent(HumName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HumON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HumOFF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HumAdj)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(DinChk6)
                    .addComponent(Dig6Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LightChk)
                    .addComponent(LightName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LightON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LightOFF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LightAdj)
                    .addComponent(jLabel14))
                .addGap(16, 16, 16)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(DinChk7)
                    .addComponent(Dig7Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClkChk)
                    .addComponent(ClkName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MinName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HourName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HourName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HourName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HOFF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MOFF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SetBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelV1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {AinChk1, AinChk2, AinChk3, AinChk4, ClkChk, DinChk0, DinChk1, DinChk2, DinChk3, DinChk4, DinChk5, DinChk6, DinChk7, HumChk, LightChk, TempChk});

        PanelV1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Ain1OFF, Ain1ON, Ain2OFF, Ain2ON, Ain3OFF, Ain3ON, Ain4OFF, Ain4ON, An1Name, An2Name, An3Name, An4Name, ClkName, Dig0Name, Dig1Name, Dig2Name, Dig3Name, Dig4Name, Dig5Name, Dig6Name, Dig7Name, HOFF, HON, HumName, HumOFF, HumON, LightName, LightOFF, LightON, TempName, TempOFF, TempON});

        PanelV1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jSlider1, jSlider2});

        PanelV1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ClearBtn, SetBtn});

        VariantList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Varianta 1", "Varianta 2", "Varianta 3", "Varianta 4" }));
        VariantList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VariantListActionPerformed(evt);
            }
        });

        jLabel2.setText("Selectati Varianta");

        Name.setBackground(new java.awt.Color(210, 210, 210));
        Name.setText("Nume");
        Name.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Name.setFocusable(false);
        Name.setOpaque(false);
        Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                NameMousePressed(evt);
            }
        });
        Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NameKeyPressed(evt);
            }
        });

        IP.setBackground(new java.awt.Color(210, 210, 210));
        IP.setText("IP");
        IP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        IP.setFocusable(false);
        IP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IPMousePressed(evt);
            }
        });
        IP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IPKeyPressed(evt);
            }
        });

        ManualBtn.setText("ON/OFF");
        ManualBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManualBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Actionare Manuala");

        TxBtn.setText("OK");
        TxBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Nume Controller");

        jLabel5.setText("Adresa IP Controller");

        jLabel6.setText("Trimite Configuratia");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista Evenimente"));

        TextArea.setEditable(false);
        TextArea.setBackground(new java.awt.Color(210, 210, 210));
        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane1.setViewportView(TextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
        );

        jMenu2.setText("File");

        MenuNew.setText("New");
        MenuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuNewActionPerformed(evt);
            }
        });
        jMenu2.add(MenuNew);
        jMenu2.add(jSeparator3);

        MenuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        MenuOpen.setText("Open");
        MenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuOpenActionPerformed(evt);
            }
        });
        jMenu2.add(MenuOpen);

        MenuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        MenuSave.setText("Save");
        MenuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSaveActionPerformed(evt);
            }
        });
        jMenu2.add(MenuSave);

        MenuSaveAs.setText("Save As...");
        MenuSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSaveAsActionPerformed(evt);
            }
        });
        jMenu2.add(MenuSaveAs);
        jMenu2.add(jSeparator2);

        MenuExit.setText("Exit");
        MenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuExitActionPerformed(evt);
            }
        });
        jMenu2.add(MenuExit);

        jMenuBar2.add(jMenu2);

        HelpMenu.setText("Help");

        Help.setText("Instructiuni Editare Eveniment");
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });
        HelpMenu.add(Help);

        About.setText("About");
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });
        HelpMenu.add(About);

        jMenuBar2.add(HelpMenu);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IP)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addComponent(TxBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(jLabel6))
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RelayList, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(VariantList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(ManualBtn))
                    .addComponent(PanelV1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {IP, Name, RelayList, VariantList, jLabel1, jLabel2});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ManualBtn, TxBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(RelayList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VariantList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ManualBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelV1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        PanelV1.getAccessibleContext().setAccessibleName("");
        jPanel1.getAccessibleContext().setAccessibleName("");
        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameMousePressed
        Name.setFocusable(true);
    }//GEN-LAST:event_NameMousePressed

    private void NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NameKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        Name.setFocusable(false);
    }
    }//GEN-LAST:event_NameKeyPressed

    private void IPMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IPMousePressed
        IP.setFocusable(true);
    }//GEN-LAST:event_IPMousePressed

    private void IPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IPKeyPressed
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        IP.setFocusable(false);
    }
    }//GEN-LAST:event_IPKeyPressed

    private void OkRelayNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkRelayNameActionPerformed
      
       if(RelayName.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Campul este gol!", "Alert", JOptionPane.ERROR_MESSAGE);
       }
       else {
           int index = RelayList.getSelectedIndex();
           RelayList.removeItemAt(index);
           String name = RelayName.getText();
           RelayList.insertItemAt(name, index);
                  
        try {
               TextArea.replaceRange((RelayList.getItemAt(index) + ":\n"),TextArea.getLineStartOffset(index*5), TextArea.getLineEndOffset((index*5)));
           } catch (BadLocationException ex) {
               Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
           jDialog1.dispose();
           
       }    
       
    }//GEN-LAST:event_OkRelayNameActionPerformed

    private void RelayListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RelayListActionPerformed
       
        DinChk0.setSelected(false);
        DinChk1.setSelected(false);
        DinChk2.setSelected(false);
        DinChk3.setSelected(false);
        DinChk4.setSelected(false);
        DinChk5.setSelected(false);
        DinChk6.setSelected(false);
        DinChk7.setSelected(false);
        AinChk1.setSelected(false);
        AinChk2.setSelected(false);
        AinChk3.setSelected(false);
        AinChk4.setSelected(false);
        ClkChk.setSelected(false);
        TempChk.setSelected(false);
        HumChk.setSelected(false);
        LightChk.setSelected(false);
        RelConfig = "";
    }//GEN-LAST:event_RelayListActionPerformed

    private void VariantListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VariantListActionPerformed
        DinChk0.setSelected(false);
        DinChk1.setSelected(false);
        DinChk2.setSelected(false);
        DinChk3.setSelected(false);
        DinChk4.setSelected(false);
        DinChk5.setSelected(false);
        DinChk6.setSelected(false);
        DinChk7.setSelected(false);
        AinChk1.setSelected(false);
        AinChk2.setSelected(false);
        AinChk3.setSelected(false);
        AinChk4.setSelected(false);
        ClkChk.setSelected(false);
        TempChk.setSelected(false);
        HumChk.setSelected(false);
        LightChk.setSelected(false);
        RelConfig = "";
    }//GEN-LAST:event_VariantListActionPerformed

    private void TxBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxBtnActionPerformed
        RelConfig = "";
        RelConfig = "r0" + Rel0v0 + Rel0v1 + Rel0v2 + Rel0v3 + "e" + "r1" + Rel1v0 + Rel1v1 + Rel1v2 + Rel1v3 + "e" + "r2" + Rel2v0 + Rel2v1 + Rel2v2 + Rel2v3 +
                   "e" +  "r3" + Rel3v0 + Rel3v1 + Rel3v2 + Rel3v3 + "e" + "r4" + Rel4v0 + Rel4v1 + Rel4v2 + Rel4v3 + "e" + "r5" + Rel5v0 + Rel5v1 + Rel5v2 + Rel5v3 + 
                    "e" + "r6" + Rel6v0 + Rel6v1 + Rel6v2 + Rel6v3 + "e" + "r7" + Rel7v0 + Rel7v1 + Rel7v2 + Rel7v3 + "e";
        if(Rel0v0.isEmpty() && Rel0v1.isEmpty() && Rel0v2.isEmpty() && Rel0v3.isEmpty())RelConfig = RelConfig.replace("r0"+"e","");
        if(Rel1v0.isEmpty() && Rel1v1.isEmpty() && Rel1v2.isEmpty() && Rel1v3.isEmpty())RelConfig = RelConfig.replace("r1"+"e","");
        if(Rel2v0.isEmpty() && Rel2v1.isEmpty() && Rel2v2.isEmpty() && Rel2v3.isEmpty())RelConfig = RelConfig.replace("r2"+"e","");
        if(Rel3v0.isEmpty() && Rel3v1.isEmpty() && Rel3v2.isEmpty() && Rel3v3.isEmpty())RelConfig = RelConfig.replace("r3"+"e","");
        if(Rel4v0.isEmpty() && Rel4v1.isEmpty() && Rel4v2.isEmpty() && Rel4v3.isEmpty())RelConfig = RelConfig.replace("r4"+"e","");
        if(Rel5v0.isEmpty() && Rel5v1.isEmpty() && Rel5v2.isEmpty() && Rel5v3.isEmpty())RelConfig = RelConfig.replace("r5"+"e","");
        if(Rel6v0.isEmpty() && Rel6v1.isEmpty() && Rel6v2.isEmpty() && Rel6v3.isEmpty())RelConfig = RelConfig.replace("r6"+"e","");
        if(Rel7v0.isEmpty() && Rel7v1.isEmpty() && Rel7v2.isEmpty() && Rel7v3.isEmpty())RelConfig = RelConfig.replace("r7"+"e","");
        if(Name.getText().equals("Nume") || Name.getText().isEmpty())JOptionPane.showMessageDialog(null, "Completati numele automatului programabil!", "Alert", JOptionPane.ERROR_MESSAGE);
        if(IP.getText().equals("IP") || IP.getText().isEmpty())JOptionPane.showMessageDialog(null, "Completati adresa IP a automatului programabil!", "Alert", JOptionPane.ERROR_MESSAGE);
        RelConfig = "conf" + RelConfig;
        System.out.println(RelConfig);
                //////////////Send UDP////////////////////////////////////
        try {
      String host = IP.getText();
      int port = 1200;
      byte[] buffer = new byte[4096];
      byte[] message = RelConfig.getBytes();

      // Get the internet address of the specified host
      InetAddress address = InetAddress.getByName(host);
      

      // Initialize a datagram packet with data and address
      DatagramPacket packet = new DatagramPacket(message, message.length,
          address, port);
      
      

             // Create a datagram socket, send the packet through it, close it.
                    DatagramSocket dsocket = new DatagramSocket();
                dsocket.send(packet);
                dsocket.setSoTimeout(1000);
                //dsocket.close();
                ///////////////////////////////Receive UDP/////////////////////////
                // Now loop forever, waiting to receive packets and printing them.
                DatagramPacket packetRX = new DatagramPacket(buffer, buffer.length,
                        address, port);
                // while (true) {
                // Wait to receive a datagram
                dsocket.receive(packetRX);
                
                // Convert the contents to a string, and display them
                String msg = new String(buffer, 0, packetRX.getLength());
                System.out.println(": = "
                       + msg);
                // Reset the length of the packet before reusing it.
                // packet.setLength(0);
                //}
                 dsocket.close();
            if(RelConfig.contains(msg)){
                JOptionPane.showMessageDialog(null, "Configurare transmisa cu succes!", "Send ok!", JOptionPane.INFORMATION_MESSAGE);
            }else JOptionPane.showMessageDialog(null, "Transmisie nereusita!!! Încercați din nou !", "Send Error!", JOptionPane.ERROR_MESSAGE);
      } catch (Exception e) {
          JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
      System.err.println(e);
      e.printStackTrace(System.err);
     }
    }//GEN-LAST:event_TxBtnActionPerformed

    private void RelayListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RelayListKeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_N)jDialog1.show(true);
        
    }//GEN-LAST:event_RelayListKeyPressed

    private void SetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetBtnActionPerformed
            SetText = "";//String pentru construirea textului de afișat
            RelConfig = "";//String pentru construirea codului transmis automatului programabil 
            if(DinChk0.isSelected()){
                RelConfig = RelConfig + "d0";
                SetText = SetText + Dig0Name.getText() + "->";
            }
            if(DinChk1.isSelected()){
                RelConfig = RelConfig + "d1";
                SetText = SetText + Dig1Name.getText() + "->";
            }
            if(DinChk2.isSelected()){
                RelConfig = RelConfig + "d2";
                SetText = SetText + Dig2Name.getText() + "->";
            }
            if(DinChk3.isSelected()){
                RelConfig = RelConfig + "d3";
                SetText = SetText + Dig3Name.getText() + "->";
            }
            if(DinChk4.isSelected()){
                RelConfig = RelConfig + "d4";
                SetText = SetText + Dig4Name.getText() + "->";
            }
            if(DinChk5.isSelected()){
                RelConfig = RelConfig + "d5";
                SetText = SetText + Dig5Name.getText() + "->";
            }
            if(DinChk6.isSelected()){
                RelConfig = RelConfig + "d6";
                SetText = SetText + Dig6Name.getText() + "->";
            }
            if(DinChk7.isSelected()){
                RelConfig = RelConfig + "d7";
                SetText = SetText + Dig7Name.getText() + "->";
            }
            if(AinChk1.isSelected()){
                RelConfig = RelConfig + "a1" + An1ONVal + "-" + An1OFFVal + "-";
                SetText = SetText + An1Name.getText() + ": ON = " + Ain1ON.getText() + "V" + "<->" + Ain1OFF.getText() + "V" + "->";// + " OFF = " + Ain1OFF.getText() + "->";
                if(Ain1ON.getText().isEmpty() || Ain1OFF.getText().isEmpty()) JOptionPane.showMessageDialog(null, "Completati ambele campuri Valoare ON si Valoare OFF!", "Alert", JOptionPane.ERROR_MESSAGE);
               // if((An1ONVal >= 1024) || (Integer.parseInt(Ain1OFF.getText()) >= 1024))JOptionPane.showMessageDialog(null, "Pentru "+ An1Name.getText() + " sunt permise doar valori cuprinse intre 0 si 1023 !", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            if(AinChk2.isSelected()){
                RelConfig = RelConfig + "a2" + An2ONVal + "-" + An2OFFVal + "-";
                SetText = SetText + An2Name.getText() + ": ON = " + Ain2ON.getText() + "V" + "<->" + Ain2OFF.getText() + "V" + "->";
                if(Ain2ON.getText().isEmpty() || Ain2OFF.getText().isEmpty()) JOptionPane.showMessageDialog(null, "Completati ambele campuri Valoare ON si Valoare OFF!", "Alert", JOptionPane.ERROR_MESSAGE);
               // if((Integer.parseInt(Ain2ON.getText()) >= 1024) || (Integer.parseInt(Ain2OFF.getText()) >= 1024))JOptionPane.showMessageDialog(null, "Pentru "+ An2Name.getText() + " sunt permise doar valori cuprinse intre 0 si 1023 !", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            if(AinChk3.isSelected()){
                RelConfig = RelConfig + "a3" + An3ONVal + "-" + An3OFFVal + "-";
                SetText = SetText + An3Name.getText() + ": ON = " + Ain3ON.getText() + "V" + "<->" + Ain3OFF.getText() + "V" + "->";
                if(Ain3ON.getText().isEmpty() || Ain3OFF.getText().isEmpty()) JOptionPane.showMessageDialog(null, "Completati ambele campuri Valoare ON si Valoare OFF!", "Alert", JOptionPane.ERROR_MESSAGE);
                //if((Integer.parseInt(Ain3ON.getText()) >= 1024) || (Integer.parseInt(Ain3OFF.getText()) >= 1024))JOptionPane.showMessageDialog(null, "Pentru "+ An3Name.getText() + " sunt permise doar valori cuprinse intre 0 si 1023 !", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            if(AinChk4.isSelected()){
                RelConfig = RelConfig + "a4" + An4ONVal + "-" + An4OFFVal + "-";
                SetText = SetText + An4Name.getText() + ": ON = " + Ain4ON.getText() + "V" + "<->" + Ain4OFF.getText() + "V" + "->";
                if(Ain4ON.getText().isEmpty() || Ain4OFF.getText().isEmpty()) JOptionPane.showMessageDialog(null, "Completati ambele campuri Valoare ON si Valoare OFF!", "Alert", JOptionPane.ERROR_MESSAGE);
               // if((Integer.parseInt(Ain4ON.getText()) >= 1024) || (Integer.parseInt(Ain4OFF.getText()) >= 1024))JOptionPane.showMessageDialog(null, "Pentru "+ An4Name.getText() + " sunt permise doar valori cuprinse intre 0 si 1023 !", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            if(TempChk.isSelected()){
                RelConfig = RelConfig + "t" + TempON.getText() + "-" + TempOFF.getText() + "-";
                SetText = SetText + TempName.getText() + ": ON = " + TempON.getText() + " OFF = " + TempOFF.getText() + "C" + "->";
                if(TempON.getText().isEmpty() || TempOFF.getText().isEmpty()) JOptionPane.showMessageDialog(null, "Completati ambele campuri Valoare ON si Valoare OFF!", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            if(HumChk.isSelected()){
                RelConfig = RelConfig + "h" + HumON.getText() + "-" + HumOFF.getText() + "-";
                SetText = SetText + HumName.getText() + ": ON = " + HumON.getText() + " OFF = " + HumOFF.getText() + "->";
                if(HumON.getText().isEmpty() || HumOFF.getText().isEmpty()) JOptionPane.showMessageDialog(null, "Completati ambele campuri Valoare ON si Valoare OFF!", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            if(LightChk.isSelected()){
                RelConfig = RelConfig + "l" + LightON.getText() + "-" + LightOFF.getText() + "-";
                SetText = SetText + LightName.getText() + ": ON = " + LightON.getText() + " OFF = " + LightOFF.getText() + "->";
                if(LightON.getText().isEmpty() || LightOFF.getText().isEmpty()) JOptionPane.showMessageDialog(null, "Completati ambele campuri Valoare ON si Valoare OFF!", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            if(ClkChk.isSelected()){
                RelConfig = RelConfig + "c" + HON.getText() + "-" + HOFF.getText() + "-" + MON.getText() + "-" + MOFF.getText() + "-";
                SetText = SetText + ClkName.getText()+ ": ON = " + HON.getText() + ":" + MON.getText() + " OFF = " + HOFF.getText() + ":" + MOFF.getText() + "->";
                if(HON.getText().isEmpty() || HOFF.getText().isEmpty() || MON.getText().isEmpty() || MOFF.getText().isEmpty()) JOptionPane.showMessageDialog(null, "Completati ambele campuri Valoare ON si Valoare OFF!", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            if(!"".equals(RelConfig)){
            RelConfig = RelConfig + "v" + VariantList.getSelectedIndex();
            }
            if(RelayList.getSelectedIndex() == 0)
            {
                switch(VariantList.getSelectedIndex()){
                    case 0:
                        Rel0v0 = RelConfig;
                        break;
                    case 1:
                        Rel0v1 = RelConfig;
                        break;
                    case 2:
                        Rel0v2 = RelConfig;
                        break;
                    case 3:
                        Rel0v3 = RelConfig;
                        break;
                        
                }
            }
            if(RelayList.getSelectedIndex() == 1)
            {
                switch(VariantList.getSelectedIndex()){
                    case 0:
                        Rel1v0 = RelConfig;
                        break;
                    case 1:
                        Rel1v1 = RelConfig;
                        break;
                    case 2:
                        Rel1v2 = RelConfig;
                        break;
                    case 3:
                        Rel1v3 = RelConfig;
                        break;
                        
                }
            }
            if(RelayList.getSelectedIndex() == 2)
            {
                switch(VariantList.getSelectedIndex()){
                    case 0:
                        Rel2v0 = RelConfig;
                        break;
                    case 1:
                        Rel2v1 = RelConfig;
                        break;
                    case 2:
                        Rel2v2 = RelConfig;
                        break;
                    case 3:
                        Rel2v3 = RelConfig;
                        break;
                        
                }
            }
            if(RelayList.getSelectedIndex() == 3)
            {
                switch(VariantList.getSelectedIndex()){
                    case 0:
                        Rel3v0 = RelConfig;
                        break;
                    case 1:
                        Rel3v1 = RelConfig;
                        break;
                    case 2:
                        Rel3v2 = RelConfig;
                        break;
                    case 3:
                        Rel3v3 = RelConfig;
                        break;
                        
                }
            }
            if(RelayList.getSelectedIndex() == 4)
            {
                switch(VariantList.getSelectedIndex()){
                    case 0:
                        Rel4v0 = RelConfig;
                        break;
                    case 1:
                        Rel4v1 = RelConfig;
                        break;
                    case 2:
                        Rel4v2 = RelConfig;
                        break;
                    case 3:
                        Rel4v3 = RelConfig;
                        break;
                        
                }
            }
            if(RelayList.getSelectedIndex() == 5)
            {
                switch(VariantList.getSelectedIndex()){
                    case 0:
                        Rel5v0 = RelConfig;
                        break;
                    case 1:
                        Rel5v1 = RelConfig;
                        break;
                    case 2:
                        Rel5v2 = RelConfig;
                        break;
                    case 3:
                        Rel5v3 = RelConfig;
                        break;
                        
                }
            }
            if(RelayList.getSelectedIndex() == 6)
            {
                switch(VariantList.getSelectedIndex()){
                    case 0:
                        Rel6v0 = RelConfig;
                        break;
                    case 1:
                        Rel6v1 = RelConfig;
                        break;
                    case 2:
                        Rel6v2 = RelConfig;
                        break;
                    case 3:
                        Rel6v3 = RelConfig;
                        break;
                        
                }
            }
            if(RelayList.getSelectedIndex() == 7)
            {
                switch(VariantList.getSelectedIndex()){
                    case 0:
                        Rel7v0 = RelConfig;
                        break;
                    case 1:
                        Rel7v1 = RelConfig;
                        break;
                    case 2:
                        Rel7v2 = RelConfig;
                        break;
                    case 3:
                        Rel7v3 = RelConfig;
                        break;
                        
                }
            }
            SetText = SetText + "|";
            int TextLine = (RelayList.getSelectedIndex()*5)+VariantList.getSelectedIndex();
            TextLine = TextLine +1;
        try {
            int startpos = TextArea.getLineStartOffset(TextLine);
            int endpos = TextArea.getLineEndOffset(TextLine);
            TextArea.replaceRange(SetText + "\n",startpos + 11, endpos);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
   
    }//GEN-LAST:event_SetBtnActionPerformed

    private void Dig0NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Dig0NameMousePressed
        Dig0Name.setFocusable(true);
    }//GEN-LAST:event_Dig0NameMousePressed

    private void Dig0NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Dig0NameKeyPressed
              if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        Dig0Name.setFocusable(false);
    }
    }//GEN-LAST:event_Dig0NameKeyPressed

    private void Dig1NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Dig1NameMousePressed
        Dig1Name.setFocusable(true);
    }//GEN-LAST:event_Dig1NameMousePressed

    private void Dig1NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Dig1NameKeyPressed
               if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        Dig1Name.setFocusable(false);
    }
    }//GEN-LAST:event_Dig1NameKeyPressed

    private void Dig2NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Dig2NameMousePressed
        Dig2Name.setFocusable(true);
    }//GEN-LAST:event_Dig2NameMousePressed

    private void Dig2NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Dig2NameKeyPressed
                   if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        Dig2Name.setFocusable(false);
    }
    }//GEN-LAST:event_Dig2NameKeyPressed

    private void Dig3NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Dig3NameMousePressed
        Dig3Name.setFocusable(true);
    }//GEN-LAST:event_Dig3NameMousePressed

    private void Dig3NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Dig3NameKeyPressed
                   if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        Dig3Name.setFocusable(false);
    }
    }//GEN-LAST:event_Dig3NameKeyPressed

    private void Dig4NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Dig4NameMousePressed
        Dig4Name.setFocusable(true);
    }//GEN-LAST:event_Dig4NameMousePressed

    private void Dig4NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Dig4NameKeyPressed
               if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        Dig4Name.setFocusable(false);
    }
    }//GEN-LAST:event_Dig4NameKeyPressed

    private void Dig5NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Dig5NameMousePressed
        Dig5Name.setFocusable(true);
    }//GEN-LAST:event_Dig5NameMousePressed

    private void Dig5NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Dig5NameKeyPressed
               if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        Dig5Name.setFocusable(false);
    }
    }//GEN-LAST:event_Dig5NameKeyPressed

    private void Dig6NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Dig6NameMousePressed
        Dig6Name.setFocusable(true);
    }//GEN-LAST:event_Dig6NameMousePressed

    private void Dig6NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Dig6NameKeyPressed
               if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        Dig6Name.setFocusable(false);
    }
    }//GEN-LAST:event_Dig6NameKeyPressed

    private void Dig7NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Dig7NameMousePressed
        Dig7Name.setFocusable(true);
    }//GEN-LAST:event_Dig7NameMousePressed

    private void Dig7NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Dig7NameKeyPressed
               if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        Dig7Name.setFocusable(false);
    }
    }//GEN-LAST:event_Dig7NameKeyPressed

    private void An1NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_An1NameMousePressed
        An1Name.setFocusable(true);
    }//GEN-LAST:event_An1NameMousePressed

    private void An1NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_An1NameKeyPressed
                  if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        An1Name.setFocusable(false);
    }
    }//GEN-LAST:event_An1NameKeyPressed

    private void An2NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_An2NameMousePressed
        An2Name.setFocusable(true);
    }//GEN-LAST:event_An2NameMousePressed

    private void An2NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_An2NameKeyPressed
               if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        An2Name.setFocusable(false);
    }
    }//GEN-LAST:event_An2NameKeyPressed

    private void An3NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_An3NameMousePressed
        An3Name.setFocusable(true);
    }//GEN-LAST:event_An3NameMousePressed

    private void An3NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_An3NameKeyPressed
               if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        An3Name.setFocusable(false);
    }
    }//GEN-LAST:event_An3NameKeyPressed

    private void An4NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_An4NameMousePressed
        An4Name.setFocusable(true);
    }//GEN-LAST:event_An4NameMousePressed

    private void MenuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSaveActionPerformed
        
        RelConfig = "";
        RelConfig = "r0" + Rel0v0 + Rel0v1 + Rel0v2 + Rel0v3 + "r1" + Rel1v0 + Rel1v1 + Rel1v2 + Rel1v3 + "r2" + Rel2v0 + Rel2v1 + Rel2v2 + Rel2v3 +
                    "r3" + Rel3v0 + Rel3v1 + Rel3v2 + Rel3v3 + "r4" + Rel4v0 + Rel4v1 + Rel4v2 + Rel4v3 + "r5" + Rel5v0 + Rel5v1 + Rel5v2 + Rel5v3 +
                    "r6" + Rel6v0 + Rel6v1 + Rel6v2 + Rel6v3 + "r7" + Rel7v0 + Rel7v1 + Rel7v2 + Rel7v3;
        if(Rel0v0.isEmpty() && Rel0v1.isEmpty() && Rel0v2.isEmpty() && Rel0v3.isEmpty())RelConfig = RelConfig.replace("r0","");
        if(Rel1v0.isEmpty() && Rel1v1.isEmpty() && Rel1v2.isEmpty() && Rel1v3.isEmpty())RelConfig = RelConfig.replace("r1","");
        if(Rel2v0.isEmpty() && Rel2v1.isEmpty() && Rel2v2.isEmpty() && Rel2v3.isEmpty())RelConfig = RelConfig.replace("r2","");
        if(Rel3v0.isEmpty() && Rel3v1.isEmpty() && Rel3v2.isEmpty() && Rel3v3.isEmpty())RelConfig = RelConfig.replace("r3","");
        if(Rel4v0.isEmpty() && Rel4v1.isEmpty() && Rel4v2.isEmpty() && Rel4v3.isEmpty())RelConfig = RelConfig.replace("r4","");
        if(Rel5v0.isEmpty() && Rel5v1.isEmpty() && Rel5v2.isEmpty() && Rel5v3.isEmpty())RelConfig = RelConfig.replace("r5","");
        if(Rel6v0.isEmpty() && Rel6v1.isEmpty() && Rel6v2.isEmpty() && Rel6v3.isEmpty())RelConfig = RelConfig.replace("r6","");
        if(Rel7v0.isEmpty() && Rel7v1.isEmpty() && Rel7v2.isEmpty() && Rel7v3.isEmpty())RelConfig = RelConfig.replace("r7","");
        
        
                               //1---------------------2--------------------3--------------------------3-------------------------
            String TextToSave = Name.getText() + "/" + IP.getText() + "/" + Dig0Name.getText() + "/" + Dig1Name.getText() + "/" +
                               //5-------------------------6--------------------------7---------------------------8---------------
                                Dig2Name.getText() + "/" + Dig3Name.getText() + "/" + Dig4Name.getText() + "/" + Dig5Name.getText() + "/" + 
                              //  9------------------------10--------------------------11-----------------------12---------------
                                Dig6Name.getText() + "/" + Dig7Name.getText() + "/" + An1Name.getText() + "/" + An2Name.getText() + "/" +
                              // 13-----------------------14--------------------------
                                An3Name.getText() + "/" + An4Name.getText() + "/" +
                              //15-----------------------------16------------------------------17---------------------------
                                RelayList.getItemAt(0) + "/" + RelayList.getItemAt(1) + "/" + RelayList.getItemAt(2) + "/" +
                              //18------------------------------19-----------------------------20---------------------------
                                RelayList.getItemAt(3) + "/" + RelayList.getItemAt(4) + "/" + RelayList.getItemAt(5) + "/" +
                              //21-----------------------------22-----------------------------
                                RelayList.getItemAt(6) + "/" + RelayList.getItemAt(7) + "/" + 
                                RelConfig + "\n" + TextArea.getText();
            

            if(!path.contains(".txt"))path = path + ".txt";
                
            
                  try{
                      
                    FileWriter outFile = new FileWriter(path);
                      
                try (PrintWriter out = new PrintWriter(outFile,true)) {
                    out.println(TextToSave);
                    JOptionPane.showMessageDialog(null, "File saved suscessfully !!", "Saved", JOptionPane.INFORMATION_MESSAGE);
                }
                    }catch(IOException e){
                        JOptionPane.showMessageDialog(null, "File not saved ! " + e, "Alert", JOptionPane.ERROR_MESSAGE);
                    }
            
    }//GEN-LAST:event_MenuSaveActionPerformed

    private void MenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuOpenActionPerformed
        Rel0v0 = ""; Rel0v1 = ""; Rel0v2 = ""; Rel0v3 = ""; 
        Rel1v0 = ""; Rel1v1 = ""; Rel1v2 = ""; Rel1v3 = "";
        Rel2v0 = ""; Rel2v1 = ""; Rel2v2 = ""; Rel2v3 = "";
        Rel3v0 = ""; Rel3v1 = ""; Rel3v2 = ""; Rel3v3 = ""; 
        Rel4v0 = ""; Rel4v1 = ""; Rel4v2 = ""; Rel4v3 = "";
        Rel5v0 = ""; Rel5v1 = ""; Rel5v2 = ""; Rel5v3 = "";
        Rel6v0 = ""; Rel6v1 = ""; Rel6v2 = ""; Rel6v3 = "";
        Rel7v0 = ""; Rel7v1 = ""; Rel7v2 = ""; Rel7v3 = "";
        FileChooser.setDialogTitle("Open Configuration");
        int userSelection = FileChooser.showOpenDialog(this);
        if(userSelection == JFileChooser.APPROVE_OPTION){
            File file = FileChooser.getSelectedFile();
            path = file.getAbsolutePath();
            try {
                
// FileReader reads text files in the default encoding.
            FileReader fileReader = new FileReader(file);
            
            StringBuilder filecontents;
                try ( // Always wrap FileReader in BufferedReader.
                        BufferedReader br = new BufferedReader(fileReader)) {
                    filecontents = new StringBuilder();
                    String line = br.readLine();
                    filecontents.append(line);//citeste prima linie a fisierului de configurare 
                    TextArea.removeAll();
                    TextArea.read(br, null);//citeste a doua linei a fisierului de configurare si display pe text area    
                }
            
            String[] array = filecontents.toString().split("/");
            Name.setText(array[0]);
            IP.setText(array[1]);
            Dig0Name.setText(array[2]);
            Dig1Name.setText(array[3]);
            Dig2Name.setText(array[4]);
            Dig3Name.setText(array[5]);
            Dig4Name.setText(array[6]);
            Dig5Name.setText(array[7]);
            Dig6Name.setText(array[8]);
            Dig7Name.setText(array[9]);
            An1Name.setText(array[10]);
            An2Name.setText(array[11]);
            An3Name.setText(array[12]);
            An4Name.setText(array[13]);
            RelayList.removeAllItems();
            for(int i=14;i<22;i++){
            RelayList.addItem(array[i]);
            }
            System.out.println(array[22]);
            String[] RelaysCfg = array[22].split("r");
            for(int i = 1;i<RelaysCfg.length;i++){
                if(RelaysCfg[i].indexOf("0") == 0){
                    if(RelaysCfg[i].contains("v0"))Rel0v0 = RelaysCfg[i].substring(1,RelaysCfg[i].indexOf("v0")+2);
                    if(RelaysCfg[i].contains("v1"))Rel0v1 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v0")+2,RelaysCfg[i].indexOf("v1")+2);
                    if(RelaysCfg[i].contains("v2"))Rel0v2 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v1")+2,RelaysCfg[i].indexOf("v2")+2); 
                    if(RelaysCfg[i].contains("v3"))Rel0v3 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v2")+2,RelaysCfg[i].indexOf("v3")+2);
                }
                if(RelaysCfg[i].indexOf("1") == 0){
                    if(RelaysCfg[i].contains("v0"))Rel1v0 = RelaysCfg[i].substring(1,RelaysCfg[i].indexOf("v0")+2);
                    if(RelaysCfg[i].contains("v1"))Rel1v1 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v0")+2,RelaysCfg[i].indexOf("v1")+2);
                    if(RelaysCfg[i].contains("v2"))Rel1v2 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v1")+2,RelaysCfg[i].indexOf("v2")+2); 
                    if(RelaysCfg[i].contains("v3"))Rel1v3 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v2")+2,RelaysCfg[i].indexOf("v3")+2);
                }
                if(RelaysCfg[i].indexOf("2") == 0){
                    if(RelaysCfg[i].contains("v0"))Rel2v0 = RelaysCfg[i].substring(1,RelaysCfg[i].indexOf("v0")+2);
                    if(RelaysCfg[i].contains("v1"))Rel2v1 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v0")+2,RelaysCfg[i].indexOf("v1")+2);
                    if(RelaysCfg[i].contains("v2"))Rel2v2 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v1")+2,RelaysCfg[i].indexOf("v2")+2); 
                    if(RelaysCfg[i].contains("v3"))Rel2v3 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v2")+2,RelaysCfg[i].indexOf("v3")+2);
                }
                if(RelaysCfg[i].indexOf("3") == 0){
                    if(RelaysCfg[i].contains("v0"))Rel3v0 = RelaysCfg[i].substring(1,RelaysCfg[i].indexOf("v0")+2);
                    if(RelaysCfg[i].contains("v1"))Rel3v1 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v0")+2,RelaysCfg[i].indexOf("v1")+2);
                    if(RelaysCfg[i].contains("v2"))Rel3v2 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v1")+2,RelaysCfg[i].indexOf("v2")+2); 
                    if(RelaysCfg[i].contains("v3"))Rel3v3 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v2")+2,RelaysCfg[i].indexOf("v3")+2);
                }
                if(RelaysCfg[i].indexOf("4") == 0){
                    if(RelaysCfg[i].contains("v0"))Rel4v0 = RelaysCfg[i].substring(1,RelaysCfg[i].indexOf("v0")+2);
                    if(RelaysCfg[i].contains("v1"))Rel4v1 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v0")+2,RelaysCfg[i].indexOf("v1")+2);
                    if(RelaysCfg[i].contains("v2"))Rel4v2 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v1")+2,RelaysCfg[i].indexOf("v2")+2); 
                    if(RelaysCfg[i].contains("v3"))Rel4v3 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v2")+2,RelaysCfg[i].indexOf("v3")+2);
                }
                if(RelaysCfg[i].indexOf("5") == 0){
                    if(RelaysCfg[i].contains("v0"))Rel5v0 = RelaysCfg[i].substring(1,RelaysCfg[i].indexOf("v0")+2);
                    if(RelaysCfg[i].contains("v1"))Rel5v1 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v0")+2,RelaysCfg[i].indexOf("v1")+2);
                    if(RelaysCfg[i].contains("v2"))Rel5v2 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v1")+2,RelaysCfg[i].indexOf("v2")+2); 
                    if(RelaysCfg[i].contains("v3"))Rel5v3 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v2")+2,RelaysCfg[i].indexOf("v3")+2);
                }
                if(RelaysCfg[i].indexOf("6") == 0){
                    if(RelaysCfg[i].contains("v0"))Rel6v0 = RelaysCfg[i].substring(1,RelaysCfg[i].indexOf("v0")+2);
                    if(RelaysCfg[i].contains("v1"))Rel6v1 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v0")+2,RelaysCfg[i].indexOf("v1")+2);
                    if(RelaysCfg[i].contains("v2"))Rel6v2 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v1")+2,RelaysCfg[i].indexOf("v2")+2); 
                    if(RelaysCfg[i].contains("v3"))Rel6v3 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v2")+2,RelaysCfg[i].indexOf("v3")+2);
                }
                if(RelaysCfg[i].indexOf("7") == 0){
                    if(RelaysCfg[i].contains("v0"))Rel7v0 = RelaysCfg[i].substring(1,RelaysCfg[i].indexOf("v0")+2);
                    if(RelaysCfg[i].contains("v1"))Rel7v1 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v0")+2,RelaysCfg[i].indexOf("v1")+2);
                    if(RelaysCfg[i].contains("v2"))Rel7v2 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v1")+2,RelaysCfg[i].indexOf("v2")+2); 
                    if(RelaysCfg[i].contains("v3"))Rel7v3 = RelaysCfg[i].substring(RelaysCfg[i].indexOf("v2")+2,RelaysCfg[i].indexOf("v3")+2);
                }
            }
        } catch (IOException e) {
            System.out.println("File input error");
        }
            
    }
        
        
    }//GEN-LAST:event_MenuOpenActionPerformed

    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        Ain1ON.setText("");
        Ain1OFF.setText("");
        Ain2ON.setText("");
        Ain2OFF.setText("");
        Ain3ON.setText("");
        Ain3OFF.setText("");
        Ain4ON.setText("");
        Ain4OFF.setText("");
        TempON.setText("");
        TempOFF.setText("");
        HumON.setText("");
        HumOFF.setText("");
        LightON.setText("");
        LightOFF.setText("");
        HON.setText("");
        HOFF.setText("");
        MON.setText("");
        MOFF.setText("");
        
    }//GEN-LAST:event_ClearBtnActionPerformed

    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed
        JOptionPane.showMessageDialog(null, "Dispozitivul selectat va fi actionat"
                +"\n"+ "numai daca toate conditiile selectate in panoul de editare evenimente sunt indeplinite "+"\n"
                + "sau daca oricare din cele 4 variante de evenimente editate sunt indeplinite." + "\n" + " Un eveniment este format din suma tuturor conditiilor editate in cele 4 variante "
                + " pentru un dipozitiv. " + "\n" + "(EXEMPLU DISPOZITIV: dicpozitivul poate fi un bec, care va fi aprins)" + "\n" + "(EXEMPLU CONDITIE: Digital In 0 poate fi un intrerupator)" , "Instructiuni Utilizare", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_HelpActionPerformed

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
        JOptionPane.showMessageDialog(null, "Automat programabil pentru automatizarea caselor si apartamentelor" +
                "\n" + "Lucrare de licenta - Univ. I.Slavici Timisoara " + "\n" +
                "Autor: Scarlat Cristian", "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_AboutActionPerformed

    private void ManualBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManualBtnActionPerformed
        String Cmd = "cmd" + RelayList.getSelectedIndex();
        System.out.println(Cmd);
        //////////////Send UDP////////////////////////////////////
        try {
      String host = IP.getText();
      int port = 1200;
      byte[] buffer = new byte[4096];
      byte[] message = Cmd.getBytes();

      // Get the internet address of the specified host
      InetAddress address = InetAddress.getByName(host);
      

      // Initialize a datagram packet with data and address
      DatagramPacket packet = new DatagramPacket(message, message.length,
          address, port);
      
      

             // Create a datagram socket, send the packet through it, close it.
                    DatagramSocket dsocket = new DatagramSocket();
                dsocket.send(packet);
                dsocket.setSoTimeout(1000);
                ///////////////////////////////Receive UDP/////////////////////////
                // Now loop forever, waiting to receive packets and printing them.
                DatagramPacket packetRX = new DatagramPacket(buffer, buffer.length,
                        address, port);
                // while (true) {
                // Wait to receive a datagram
                dsocket.receive(packetRX);
                // Convert the contents to a string, and display them
                String msg = new String(buffer, 0, packetRX.getLength());
                System.out.println(": = "
                        + msg);
                // Reset the length of the packet before reusing it.
                // packet.setLength(0);
                //}
                 dsocket.close();
            
      } catch (Exception e) {
         // JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
      
     }
        
     //////////////////////////////////////////////////////////////////
     
    }//GEN-LAST:event_ManualBtnActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        System.out.println(jSlider1.getValue());
        SldVal1 = jSlider1.getValue();
        if(SldVal1 >= SldVal2){
            if(An1Adj.isSelected())Ain1ON.setBackground(Color.red);
            if(An2Adj.isSelected())Ain2ON.setBackground(Color.red);
            if(An3Adj.isSelected())Ain3ON.setBackground(Color.red);
            if(An4Adj.isSelected())Ain4ON.setBackground(Color.red);
            if(TempAdj.isSelected())TempON.setBackground(Color.red);
            if(HumAdj.isSelected())HumON.setBackground(Color.red);
            if(LightAdj.isSelected())LightON.setBackground(Color.red);
        }
        else{
            Ain1ON.setBackground(new Color(210,210,210));
            Ain2ON.setBackground(new Color(210,210,210));
            Ain3ON.setBackground(new Color(210,210,210));
            Ain4ON.setBackground(new Color(210,210,210));
            TempON.setBackground(new Color(210,210,210));
            HumON.setBackground(new Color(210,210,210));
            LightON.setBackground(new Color(210,210,210));
            if(An1Adj.isSelected()){An1ONVal = SldVal1;Ain1ON.setText(String.format("%.1f",(float)(SldVal1*5)/1023));}
            if(An2Adj.isSelected()){An2ONVal = SldVal1;Ain2ON.setText(String.format("%.1f",(float)(SldVal1*5)/1023));}
            if(An3Adj.isSelected()){An3ONVal = SldVal1;Ain3ON.setText(String.format("%.1f",(float)(SldVal1*5)/1023));}
            if(An4Adj.isSelected()){An4ONVal = SldVal1;Ain4ON.setText(String.format("%.1f",(float)(SldVal1*5)/1023));}
            if(TempAdj.isSelected())TempON.setText(String.valueOf(SldVal1/34+10));
            if(HumAdj.isSelected())HumON.setText(String.valueOf(SldVal1*100/1023));
            if(LightAdj.isSelected())LightON.setText(String.valueOf(SldVal1));
        }
        
    }//GEN-LAST:event_jSlider1StateChanged

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        System.out.println(jSlider2.getValue());
        SldVal2 = jSlider2.getValue();
        if(SldVal1 >= SldVal2){
            if(An1Adj.isSelected())Ain1OFF.setBackground(Color.red);
            if(An2Adj.isSelected())Ain2OFF.setBackground(Color.red);
            if(An3Adj.isSelected())Ain3OFF.setBackground(Color.red);
            if(An4Adj.isSelected())Ain4OFF.setBackground(Color.red);
            if(TempAdj.isSelected())TempOFF.setBackground(Color.red);
            if(HumAdj.isSelected())HumOFF.setBackground(Color.red);
            if(LightAdj.isSelected())LightOFF.setBackground(Color.red);
        }
        else{
            Ain1OFF.setBackground(new Color(210,210,210));
            Ain2OFF.setBackground(new Color(210,210,210));
            Ain3OFF.setBackground(new Color(210,210,210));
            Ain4OFF.setBackground(new Color(210,210,210));
            TempOFF.setBackground(new Color(210,210,210));
            HumOFF.setBackground(new Color(210,210,210));
            LightOFF.setBackground(new Color(210,210,210));
            if(An1Adj.isSelected()){An1OFFVal = SldVal2;Ain1OFF.setText(String.format("%.1f",(float)(SldVal2*5)/1023));}
            if(An2Adj.isSelected()){An2OFFVal = SldVal2;Ain2OFF.setText(String.format("%.1f",(float)(SldVal2*5)/1023));}
            if(An3Adj.isSelected()){An3OFFVal = SldVal2;Ain3OFF.setText(String.format("%.1f",(float)(SldVal2*5)/1023));}
            if(An4Adj.isSelected()){An4OFFVal = SldVal2;Ain4OFF.setText(String.format("%.1f",(float)(SldVal2*5)/1023));}
            if(TempAdj.isSelected())TempOFF.setText(String.valueOf(SldVal2/34+10));
            if(HumAdj.isSelected())HumOFF.setText(String.valueOf(SldVal2*100/1023));
            if(LightAdj.isSelected())LightOFF.setText(String.valueOf(SldVal2));
        }
    }//GEN-LAST:event_jSlider2StateChanged

    private void MenuNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuNewActionPerformed
        Rel0v0 = ""; Rel0v1 = ""; Rel0v2 = ""; Rel0v3 = ""; 
        Rel1v0 = ""; Rel1v1 = ""; Rel1v2 = ""; Rel1v3 = "";
        Rel2v0 = ""; Rel2v1 = ""; Rel2v2 = ""; Rel2v3 = "";
        Rel3v0 = ""; Rel3v1 = ""; Rel3v2 = ""; Rel3v3 = ""; 
        Rel4v0 = ""; Rel4v1 = ""; Rel4v2 = ""; Rel4v3 = "";
        Rel5v0 = ""; Rel5v1 = ""; Rel5v2 = ""; Rel5v3 = "";
        Rel6v0 = ""; Rel6v1 = ""; Rel6v2 = ""; Rel6v3 = "";
        Rel7v0 = ""; Rel7v1 = ""; Rel7v2 = ""; Rel7v3 = "";
        RelayList.removeAllItems();
        Name.setText("Name");
        IP.setText("IP");
        Dig0Name.setText("Digital IN 0");
        Dig1Name.setText("Digital IN 1");
        Dig2Name.setText("Digital IN 2");
        Dig3Name.setText("Digital IN 3");
        Dig4Name.setText("Digital IN 4");
        Dig5Name.setText("Digital IN 5");
        Dig6Name.setText("Digital IN 6");
        Dig7Name.setText("Digital IN 7");
        An1Name.setText("Analog IN 1");
        An2Name.setText("Analog IN 2");
        An3Name.setText("Analog IN 3");
        An4Name.setText("Analog IN 4");
        jSlider1.setValue(0);
        jSlider2.setValue(1023);
        Ain1ON.setText("");
        Ain1OFF.setText("");
        Ain2ON.setText("");
        Ain2OFF.setText("");
        Ain3ON.setText("");
        Ain3OFF.setText("");
        Ain4ON.setText("");
        Ain4OFF.setText("");
        TempON.setText("");
        TempOFF.setText("");
        HumON.setText("");
        HumOFF.setText("");
        LightON.setText("");
        LightOFF.setText("");
        HON.setText("");
        HOFF.setText("");
        MON.setText("");
        MOFF.setText("");
        
        RelayList.removeAllItems();
        for(int i=0;i<8;i++){
           RelayList.addItem("Digital OUT "+i);
        }
        
        TextArea.setText("");
        for(int i=0;i<8;i++){
                    TextArea.append(RelayList.getItemAt(i) + ":\n");
                for(int j=0;j<4;j++){
                        TextArea.append(VariantList.getItemAt(j) + ":-\n");
                    }
                }
    }//GEN-LAST:event_MenuNewActionPerformed

    private void MenuSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSaveAsActionPerformed
                RelConfig = "";
        RelConfig = "r0" + Rel0v0 + Rel0v1 + Rel0v2 + Rel0v3 + "r1" + Rel1v0 + Rel1v1 + Rel1v2 + Rel1v3 + "r2" + Rel2v0 + Rel2v1 + Rel2v2 + Rel2v3 +
                    "r3" + Rel3v0 + Rel3v1 + Rel3v2 + Rel3v3 + "r4" + Rel4v0 + Rel4v1 + Rel4v2 + Rel4v3 + "r5" + Rel5v0 + Rel5v1 + Rel5v2 + Rel5v3 +
                    "r6" + Rel6v0 + Rel6v1 + Rel6v2 + Rel6v3 + "r7" + Rel7v0 + Rel7v1 + Rel7v2 + Rel7v3;
        if(Rel0v0.isEmpty() && Rel0v1.isEmpty() && Rel0v2.isEmpty() && Rel0v3.isEmpty())RelConfig = RelConfig.replace("r0","");
        if(Rel1v0.isEmpty() && Rel1v1.isEmpty() && Rel1v2.isEmpty() && Rel1v3.isEmpty())RelConfig = RelConfig.replace("r1","");
        if(Rel2v0.isEmpty() && Rel2v1.isEmpty() && Rel2v2.isEmpty() && Rel2v3.isEmpty())RelConfig = RelConfig.replace("r2","");
        if(Rel3v0.isEmpty() && Rel3v1.isEmpty() && Rel3v2.isEmpty() && Rel3v3.isEmpty())RelConfig = RelConfig.replace("r3","");
        if(Rel4v0.isEmpty() && Rel4v1.isEmpty() && Rel4v2.isEmpty() && Rel4v3.isEmpty())RelConfig = RelConfig.replace("r4","");
        if(Rel5v0.isEmpty() && Rel5v1.isEmpty() && Rel5v2.isEmpty() && Rel5v3.isEmpty())RelConfig = RelConfig.replace("r5","");
        if(Rel6v0.isEmpty() && Rel6v1.isEmpty() && Rel6v2.isEmpty() && Rel6v3.isEmpty())RelConfig = RelConfig.replace("r6","");
        if(Rel7v0.isEmpty() && Rel7v1.isEmpty() && Rel7v2.isEmpty() && Rel7v3.isEmpty())RelConfig = RelConfig.replace("r7","");
        
        
                               //1---------------------2--------------------3--------------------------3-------------------------
            String TextToSave = Name.getText() + "/" + IP.getText() + "/" + Dig0Name.getText() + "/" + Dig1Name.getText() + "/" +
                               //5-------------------------6--------------------------7---------------------------8---------------
                                Dig2Name.getText() + "/" + Dig3Name.getText() + "/" + Dig4Name.getText() + "/" + Dig5Name.getText() + "/" + 
                              //  9------------------------10--------------------------11-----------------------12---------------
                                Dig6Name.getText() + "/" + Dig7Name.getText() + "/" + An1Name.getText() + "/" + An2Name.getText() + "/" +
                              // 13-----------------------14--------------------------
                                An3Name.getText() + "/" + An4Name.getText() + "/" +
                              //15-----------------------------16------------------------------17---------------------------
                                RelayList.getItemAt(0) + "/" + RelayList.getItemAt(1) + "/" + RelayList.getItemAt(2) + "/" +
                              //18------------------------------19-----------------------------20---------------------------
                                RelayList.getItemAt(3) + "/" + RelayList.getItemAt(4) + "/" + RelayList.getItemAt(5) + "/" +
                              //21-----------------------------22-----------------------------
                                RelayList.getItemAt(6) + "/" + RelayList.getItemAt(7) + "/" + 
                                RelConfig + "\n" + TextArea.getText();
            FileChooser.setDialogTitle("Save Configuration");
            int userSelection = FileChooser.showSaveDialog(this);
        if(userSelection == JFileChooser.APPROVE_OPTION){
            File file = FileChooser.getSelectedFile();
            
               if(file.exists()){// daca fisierul exista..
                   int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to override existing file?", "Confirm",
        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
               
               if (response == JOptionPane.YES_OPTION) {//daca "YES" , modifica fisierul existent
           String  PathToSave = file.getAbsolutePath();
           System.out.println(PathToSave);

            if(!PathToSave.contains(".txt"))PathToSave = PathToSave + ".txt";
                
            
                  try{
                      
                    FileWriter outFile = new FileWriter(PathToSave);
                      
                try (PrintWriter out = new PrintWriter(outFile,true)) {
                    out.println(TextToSave);
                    JOptionPane.showMessageDialog(null, "File saved suscessfully !!", "Saved", JOptionPane.INFORMATION_MESSAGE);
                }
                    }catch(IOException e){
                        JOptionPane.showMessageDialog(null, "File not saved ! " + e, "Alert", JOptionPane.ERROR_MESSAGE);
                    }
                }
           }else{
                 String  PathToSave = file.getAbsolutePath();
           System.out.println(PathToSave);

            if(!PathToSave.contains(".txt"))PathToSave = PathToSave + ".txt";//daca utitlizatorul nu a adaugat extensia .txt
                
            
                  try{
                      
                    FileWriter outFile = new FileWriter(PathToSave);
                      
                try (PrintWriter out = new PrintWriter(outFile,true)) {
                    out.println(TextToSave);
                    JOptionPane.showMessageDialog(null, "File saved suscessfully !!", "Saved", JOptionPane.INFORMATION_MESSAGE);
                }
                    }catch(IOException e){
                        JOptionPane.showMessageDialog(null, "File not saved ! " + e, "Alert", JOptionPane.ERROR_MESSAGE);
                    }  
               }
        }
    }//GEN-LAST:event_MenuSaveAsActionPerformed

    private void MenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_MenuExitActionPerformed
   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                new MainFrame().setVisible(true);
            }
        });
    }
  // end methods

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem About;
    private javax.swing.JTextField Ain1OFF;
    private javax.swing.JTextField Ain1ON;
    private javax.swing.JTextField Ain2OFF;
    private javax.swing.JTextField Ain2ON;
    private javax.swing.JTextField Ain3OFF;
    private javax.swing.JTextField Ain3ON;
    private javax.swing.JTextField Ain4OFF;
    private javax.swing.JTextField Ain4ON;
    private javax.swing.JCheckBox AinChk1;
    private javax.swing.JCheckBox AinChk2;
    private javax.swing.JCheckBox AinChk3;
    private javax.swing.JCheckBox AinChk4;
    private javax.swing.JRadioButton An1Adj;
    private javax.swing.JTextField An1Name;
    private javax.swing.JRadioButton An2Adj;
    private javax.swing.JTextField An2Name;
    private javax.swing.JRadioButton An3Adj;
    private javax.swing.JTextField An3Name;
    private javax.swing.JRadioButton An4Adj;
    private javax.swing.JTextField An4Name;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JCheckBox ClkChk;
    private javax.swing.JTextField ClkName;
    private javax.swing.JTextField Dig0Name;
    private javax.swing.JTextField Dig1Name;
    private javax.swing.JTextField Dig2Name;
    private javax.swing.JTextField Dig3Name;
    private javax.swing.JTextField Dig4Name;
    private javax.swing.JTextField Dig5Name;
    private javax.swing.JTextField Dig6Name;
    private javax.swing.JTextField Dig7Name;
    private javax.swing.JCheckBox DinChk0;
    private javax.swing.JCheckBox DinChk1;
    private javax.swing.JCheckBox DinChk2;
    private javax.swing.JCheckBox DinChk3;
    private javax.swing.JCheckBox DinChk4;
    private javax.swing.JCheckBox DinChk5;
    private javax.swing.JCheckBox DinChk6;
    private javax.swing.JCheckBox DinChk7;
    private javax.swing.JOptionPane Error;
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JTextField HOFF;
    private javax.swing.JTextField HON;
    private javax.swing.JMenuItem Help;
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JTextField HourName;
    private javax.swing.JTextField HourName1;
    private javax.swing.JTextField HourName2;
    private javax.swing.JRadioButton HumAdj;
    private javax.swing.JCheckBox HumChk;
    private javax.swing.JTextField HumName;
    private javax.swing.JTextField HumOFF;
    private javax.swing.JTextField HumON;
    private javax.swing.JTextField IP;
    private javax.swing.JRadioButton LightAdj;
    private javax.swing.JCheckBox LightChk;
    private javax.swing.JTextField LightName;
    private javax.swing.JTextField LightOFF;
    private javax.swing.JTextField LightON;
    private javax.swing.JTextField MOFF;
    private javax.swing.JTextField MON;
    private javax.swing.JButton ManualBtn;
    private javax.swing.JMenuItem MenuExit;
    private javax.swing.JMenuItem MenuNew;
    private javax.swing.JMenuItem MenuOpen;
    private javax.swing.JMenuItem MenuSave;
    private javax.swing.JMenuItem MenuSaveAs;
    private javax.swing.JTextField MinName;
    private javax.swing.JTextField Name;
    private javax.swing.JLabel NewName;
    private javax.swing.JButton OkRelayName;
    private javax.swing.JPanel PanelV1;
    private static javax.swing.JComboBox<String> RelayList;
    private javax.swing.JTextField RelayName;
    private javax.swing.JButton SetBtn;
    private javax.swing.JRadioButton TempAdj;
    private javax.swing.JCheckBox TempChk;
    private javax.swing.JTextField TempName;
    private javax.swing.JTextField TempOFF;
    private javax.swing.JTextField TempON;
    private static javax.swing.JTextArea TextArea;
    private javax.swing.JButton TxBtn;
    private javax.swing.JComboBox<String> VariantList;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
  // end attributes
    // End of variables declaration//GEN-END:variables
}
